'use client';

import { useEffect, useActionState } from 'react';
import { useFormStatus } from 'react-dom';
import { generatePathwayAction } from '@/lib/actions';
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';
import { Label } from '@/components/ui/label';
import { Textarea } from '@/components/ui/textarea';
import { Button } from '@/components/ui/button';
import { Loader2, Wand2 } from 'lucide-react';
import { useToast } from '@/hooks/use-toast';
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion';
import { Skeleton } from '@/components/ui/skeleton';

function SubmitButton() {
  const { pending } = useFormStatus();
  return (
    <Button type="submit" disabled={pending} className="w-full">
      {pending && <Loader2 className="mr-2 h-4 w-4 animate-spin" />}
      Generate Pathway
    </Button>
  );
}

export default function LearningPathway({ domain }: { domain: string }) {
  const initialState = { data: null, error: null };
  const [state, dispatch] = useActionState(generatePathwayAction, initialState);
  const { pending } = useFormStatus();
  const { toast } = useToast();

  useEffect(() => {
    if (state.error) {
      toast({
        variant: 'destructive',
        title: 'Error',
        description: state.error,
      });
    }
  }, [state.error, toast]);

  const parsedPathway = state.data?.learningPathway
    .split(/\n\n(?=Stage|### |## )/g)
    .map((part, index) => {
      const lines = part.trim().split('\n');
      const title = lines[0].replace(/Stage \d: |### |## /g, '').trim();
      const content = lines.slice(1).join('\n').trim();
      return { id: `item-${index + 1}`, title, content };
    });

  return (
    <div className="grid grid-cols-1 lg:grid-cols-3 gap-6 items-start">
      <Card className="lg:col-span-1 sticky top-6">
        <form action={dispatch}>
          <CardHeader>
            <CardTitle>Learning Pathway Generator</CardTitle>
            <CardDescription>
              Describe your skills, preferences, and goals to generate a custom learning plan.
            </CardDescription>
          </CardHeader>
          <CardContent className="space-y-4">
            <input type="hidden" name="domain" value={domain} />
            <div className="space-y-2">
              <Label htmlFor="skills">Current Skills</Label>
              <Textarea
                id="skills"
                name="skills"
                placeholder="e.g., Basic Python, HTML/CSS"
                required
                rows={3}
              />
            </div>
            <div className="space-y-2">
              <Label htmlFor="preferences">Learning Preferences</Label>
              <Textarea
                id="preferences"
                name="preferences"
                placeholder="e.g., Project-based learning, visual examples"
                required
                rows={3}
              />
            </div>
            <div className="space-y-2">
              <Label htmlFor="goals">Learning Goals</Label>
              <Textarea
                id="goals"
                name="goals"
                placeholder="e.g., Become a full-stack developer in 6 months"
                required
                rows={3}
              />
            </div>
          </CardContent>
          <CardFooter>
            <SubmitButton />
          </CardFooter>
        </form>
      </Card>

      <Card className="lg:col-span-2">
        <CardHeader>
          <CardTitle>Your Personalized Pathway</CardTitle>
          <CardDescription>
            Here is the step-by-step curriculum generated by the AI based on your input.
          </CardDescription>
        </CardHeader>
        <CardContent>
          {pending ? (
             <div className="space-y-4">
                <Skeleton className="h-10 w-full" />
                <Skeleton className="h-20 w-full" />
                <Skeleton className="h-10 w-full" />
                <Skeleton className="h-20 w-full" />
            </div>
          ) : state.data?.learningPathway ? (
            <Accordion type="single" collapsible className="w-full" defaultValue={parsedPathway?.[0].id}>
              {parsedPathway?.map(item => (
                <AccordionItem value={item.id} key={item.id}>
                  <AccordionTrigger className="text-lg font-semibold">{item.title}</AccordionTrigger>
                  <AccordionContent>
                    <div className="prose prose-sm max-w-none dark:prose-invert" dangerouslySetInnerHTML={{ __html: item.content.replace(/\n/g, '<br />').replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>') }} />
                  </AccordionContent>
                </AccordionItem>
              ))}
            </Accordion>
          ) : (
            <div className="text-center text-muted-foreground py-24 flex flex-col items-center justify-center space-y-4">
                <div className="p-4 bg-secondary rounded-full">
                    <Wand2 className="h-12 w-12 text-primary" />
                </div>
                <p className="text-lg">Your generated learning pathway will appear here.</p>
                <p className="text-sm max-w-sm">Fill out the form on the left and click "Generate Pathway" to see the magic happen!</p>
            </div>
          )}
        </CardContent>
      </Card>
    </div>
  );
}
